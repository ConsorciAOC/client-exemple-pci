plugins {
    id 'java'
}

group 'cat.aoc.client_pci'
version '1.0-SNAPSHOT'

sourceCompatibility = 11
targetCompatibility = 11

repositories {
    mavenCentral()
}

configurations {
    jaxb
}

dependencies {
    //implementation group: 'jakarta.xml.bind', name: 'jakarta.xml.bind-api', version: '3.0.1' // JAXB API
    implementation group: 'com.sun.xml.bind', name: 'jaxb-impl', version: '3.0.1' // JAXB reference implementation (curiously with com.sun coordinates)

    // necessary for generating JAVA classes with gradle 'jaxb' task
    jaxb(
            'com.sun.xml.bind:jaxb-impl:3.0.1', // JAXB Impl
            'com.sun.xml.bind:jaxb-xjc:3.0.1', // XJC tools
    )

    // Testing dependencies
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.8.2'
    testRuntimeOnly group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: '5.8.2'


}

test {
    useJUnitPlatform()
}

task jaxb {
    description 'Convert XSD\'s to java classes'
    System.setProperty('javax.xml.accessExternalSchema', 'all')
    def jaxbTargetDir = file("src/main/java/")
    doLast {
        jaxbTargetDir.mkdirs()
        file('src/main/resources/xsd/').eachDir(xsdProject -> {
            println('Genearating source code from: ' + xsdProject.name)

			file(xsdProject).eachFileMatch(~/.*.xsd$/,schemaFile -> {
                
                    def xsd = schemaFile.name.split('.xsd')[0]
					
                    ant.taskdef(
                            name: 'xjc',
                            classname: 'com.sun.tools.xjc.XJCTask',
                            classpath: configurations.jaxb.asPath
                    )
                    ant.jaxbTargetDir = jaxbTargetDir
					println xsdProject.name
					println schemaFile.getAbsoluteFile()
					

					// TODO: I DON'T FEEL OK... HOWEVER IT'S LATE, FIND ANOTHER WAY TO AVOID "BINDING" ATTRIBUTE (USING EMPTY VALUE DOESN'T WORK)
					def bindingFile = ''
					if(file(schemaFile.getAbsolutePath() - '.xsd' + '.xjb').exists()) {
						bindingFile = schemaFile.getAbsolutePath() - '.xsd' + '.xjb'
						
						ant.xjc(
							destdir: '${jaxbTargetDir}',
							package: 'cat.aoc.client_pci.jaxb.' + xsdProject.name,
							schema: schemaFile.getAbsoluteFile(),
							binding: "${bindingFile}"
						)	
						
					}else {
						
						ant.xjc(
							destdir: '${jaxbTargetDir}',
							package: 'cat.aoc.client_pci.jaxb.' + xsdProject.name,
							schema: schemaFile.getAbsoluteFile(),
						)
					}

            })
        })
    }
}

//compileJava.dependsOn jaxb
